global
	# log /dev/log	local0
	# log /dev/log	local1 notice
	# chroot /var/lib/haproxy
	# stats socket /run/haproxy/admin.sock mode 660 level admin
	# stats timeout 30s
	# user haproxy
	# group haproxy
	daemon
	# Set this to your desired maximum connection count.
	maxconn 2048
	# bit setting for Diffie - Hellman key size.
	tune.ssl.default-dh-param 2048

	# Default SSL material locations
	# ca-base /etc/ssl/certs
	# crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        # ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        # ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        # ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	option forwardfor
	option http-server-close

	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend ft_http
	# Redirect HTTP to HTTPS
	bind *:80
	# Adds http header to end of end of the HTTP request
	http-request add-header X-Forwarded-Proto http
	# Sets the default backend to use which is defined below with name 'web-backend'
	default_backend web-backend

frontend ft_https
	bind *:443 ssl crt /etc/haproxy/certs/www.chidubemnwigwe.tech.pem
	# set x-forward to https
	http-request add-header X-Forwarded-Proto https
	# set X-SSL in case of ssl_fc <- explained below
	http-request set-header X-SSL %[ssl_fc]
	# Select a Challenge
	acl letsencrypt-acl path_beg /.well-known/acme-challenge/
	# Use the challenge backend if the challenge is set
	use_backend letsencrypt-backend if letsencrypt-acl
	default_backend web-backend

backend web-backend
	balance roundrobin
	redirect scheme https code 301 if !{ ssl_fc }
	server web-01 web-01.chidubemnwigwe.tech:80 check
	server web-02 web-02.chidubemnwigwe.tech:80 check

backend letsencrypt-backend
	# Lets encrypt backend server
	server letsencrypt 127.0.0.1:54321
